@model @BingHousing_BO.SendBillsModel
@{
    ViewBag.Title = "Bills";

}
<div ng-controller="SendBillsController" align="center" class="ng-cloak">
   
        <div align="center">
            <h2>@if (Model != null && Model.Group != null) {@Model.Group.GroupName}</h2>
           <input type="hidden" id="GroupId" name="GroupId" value="@Model.Group.GroupId">
        </div>   
    <div class="row">
                
                    @if (Model != null && Model.Group != null && Model.PrevGroupId  > 0 && Model.PrevGroupId != Model.Group.GroupId)
                    {
                        <div class="col-md-2">
                            <a href="@Url.Action("SendBills", "Group", new { GroupId = Model.PrevGroupId })">
                                <button>
                                    Previous Group
                                </button>
                            </a>
                        </div>
                    }

                    @if (Model != null && Model.NextGroupId > 0 && Model.NextGroupId != Model.Group.GroupId)
                    {
                        <div class="col-md-2">
                            <a href="@Url.Action("SendBills", "Group", new { GroupId = Model.NextGroupId })">
                                <button>
                                    Next Group
                                </button>
                            </a>
                        </div>
                        }

                    <div class="col-md-8"></div>
                </div>
            <div class="panel-body" id="foo">
                <div>
                    <table class="table table-striped table-bordered table-hover" id="dataTables-example">
                        <thead class="gridhead">
                            <tr>
                                <th style="width:11%;">
                                    Customer Name
                                </th>
                                <th style="width:7%;">
                                    Customer Email
                                </th>
                                <th style="width:7%;">
                                    CC / BCC Email
                                </th>
                                <th style="width:7%;">
                                    Amount Due
                                </th>
                                <th ng-hide="editMode" style="width:30%;">
                                    Bill Description
                                </th>
                                <th ng-show="editMode" style="width:30%;">
                                    Bill Description
                                </th>
                                <th style="width:10%;">
                                    Bill Date
                                </th>
                                <th style="width:7%;">
                                    Do Not Email<br />
                                    <input class="allCheckBox" type="checkbox" />
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr ng-repeat="r in Results|orderBy:'CustomerFirstName'">
                                <td id="divfn_{{r.CustomerId}}">
                                    <lable>
                                        <a href="/User/EditCustomerDetails?CustomerId={{r.CustomerId}}" target="_blank">{{r.CustomerFirstName}}   {{r.CustomerLastName }}</a>
                                    </lable>
                                    <input type="hidden" value="{{r.CCEmail}}" id="hdncc_{{r.CustomerId}}" />
                                    <input type="hidden" value="{{r.BCCEmail}}" id="hdnbcc_{{r.CustomerId}}" />
                                </td>
                                <td>
                                    <lable ng-bind="r.CustomerEmail">
                                </td>
                                <td>
                                    <div align="center" ng-if="r.CCEmail">
                                        cc: {{r.CCEmail}}<br />
                                    </div>
                                    <div align="center" ng-if="r.BCCEmail">
                                        bcc: {{r.BCCEmail}}
                                    </div>
                                </td>
                                <td ng-hide="editMode">
                                    <lable ng-bind="r.AmountDue">
                                </td>
                                <td ng-hide="editMode" id="divbd_{{r.CustomerId}}">
                                    <lable ng-bind="r.BillDescription"> <br />
                                </td>
                                <td ng-hide="editMode" class="billDate" id="{{r.CustomerId}}">
                                    <lable ng-bind="r.NextBillDate">
                                </td>
                                <td ng-show="editMode">
                                    <input type="text" ng-model="r.AmountDue" value="{{r.AmountDue}}" style="width:50px" />
                                </td>
                                <td ng-show="editMode" style="width:30%;">
                                    <textarea ng-model="r.BillDescription" cols="50" value="{{r.BillDescription}}"></textarea>
                                </td>
                                <td ng-show="editMode">
                                    <input type="text" ng-model="r.NextBillDate" value="{{r.NextBillDate}}" style="width:100px" />
                                </td>
                                <td>
                                    <input class="singleCheckBox" name="selectedRows" value="{{r.CustomerId}}" ng-if="validate(r.BillDate)"
                                           type="checkbox" />
                                </td>
                            </tr>
                        </tbody>
                        <tfoot class="gridhead">
                            <tr>
                                <th>
                                    Customer Name
                                </th>
                                <th>
                                    Customer Email
                                </th>
                                <th>
                                    CC / BCC Email
                                </th>
                                <th>
                                    Amount Due
                                </th>
                                <th ng-hide="editMode">
                                    Bill Description
                                </th>
                                <th ng-show="editMode">
                                    Bill Description
                                </th>
                                <th>
                                    Bill Date
                                </th>
                                <th>
                                    Do Not Email<br />
                                    <input class="allCheckBox" type="checkbox" />
                                </th>
                            </tr>                            
                        </tfoot>
                    </table>
                    <div>                        
                     
                            <input type="button" id="btnBulkBillDescUpdate" value="Update All Bill Descriptions" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <input type="button" ng-hide="editMode" id="btnEdit" value="Edit" ng-click="EditDescription()" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            <input type="button" id="btnUpdate" ng-show="editMode" value="Update" ng-click="UpdateDescription()" />
                            <input type="button" id="btnsendmail" value="Send Email" />
                                                 
                    </div>
                    
                    @*<a href="@Url.Action("Edit", "Group", new { groupId = ViewBag.groupId })"><input type="button" id="btnEdit" value="Edit Group" /></a>*@
                    @Html.Hidden("CustomertSelected")
                </div>
                <!--Email Note Modal-->
                <form method="post" enctype="multipart/form-data">
                <div align="center" id="dialog" title="Email Note Box" style="display: none;">
                    <table style="border:none">
                        <tr>
                            <td>
                                @Html.Label("Attachment:")<br />
                            </td>
                            <td><input type="file" name="file" id="file" /><input type="button" value="Remove file" id="btnRemove" /></td>
                        </tr>
                        <tr>
                            <td>@Html.Label("You are sending mail to:")<br /></td>
                            <td><div id="divSendMail"></div></td>
                        </tr>
                        <tr>
                            <td>@Html.Label("cc :")</td>
                            <td><div id="divcc"></div></td>
                        </tr>
                        <tr>
                            <td>@Html.Label("bcc:")</td>
                            <td><div id="divbcc"></div></td>
                        </tr>
                        <tr style="border:none">
                            <td style="border:none">
                                @Html.Label("Email Note:")<br>
                                @Html.Label("(copy or paste the note)")
                            </td>
                            <td>
                                @Html.TextArea("EmailNote")

                            </td>
                        </tr>
                    </table>
                    <div align="center" style="margin-top:10px;"><input type="button" value="Send" id="btnnotebox" /><input type="button" value="Cancel" id="btncancel" /></div>
                </div>
                </form>

                <form method="post">
                    <div align="center" id="dialog1" title="Update Desc" style="display: none;">
                        <table style="border:none">
                            <tr>
                                <td>@Html.Label("You are updating Bill Desc for:")<br /></td>
                                <td><div id="divGroupNames"></div></td>
                            </tr>
                            <tr>
                                <td>
                                    @Html.Label("Bill Description:")<br />
                                </td>
                                <td>
                                    @Html.TextBox("BillDesc")
                                    @Html.Hidden("CustomertSelected")
                                </td>
                            </tr>
                        </table>
                        <div align="center" style="margin-top:10px;"><input type="button" value="Update Bill Description" id="btnUpdateDesc" /><input type="button" value="Cancel" id="btnCancelDesc" /></div>
                    </div>
                </form>
            </div>
            @section Scripts{
                @Scripts.Render("~/Scripts/spin.min.js")
                <script type="text/javascript">

                    $(document).ready(function () {

                        $(".allCheckBox").click(function () {
                            var isChecked = this.checked;
                            $('.allCheckBox').each(function () { this.checked = (isChecked ? true : false) });
                            $('.singleCheckBox').each(function () { this.checked = (isChecked ? true : false) });
                            $('.singleCheckBox').closest('tr').addClass(isChecked ? 'selected-row' : 'not-selected-row');
                            $('.singleCheckBox').closest('tr').removeClass(isChecked ? 'not-selected-row' : 'selected-row');
                        });

                        $('.singleCheckBox').click(function () {
                            var isChecked = this.checked;//this.checked;
                            $(this).closest('tr').addClass(isChecked ? 'selected-row' : 'not-selected-row');
                            $(this).closest('tr').removeClass(isChecked ? 'not-selected-row' : 'selected-row');
                            if (isChecked && $('.singleCheckBox').length == $('.selected-row').length)
                                $('.allCheckBox').each(function () { this.checked = true });
                            else
                                $('.allCheckBox').each(function () { this.checked = false });

                        });

                        $("#btnRemove").click(function(){
                            $('#file').val("");
                        });

                        $('#btnBulkBillDescUpdate').click(function (event) {
                            $("#dialog1").dialog({
                                autoOpen: false,
                                width: 600,
                                height: 350,
                                show: {
                                    effect: "blind",
                                    duration: 1000
                                },
                                hide: {
                                    effect: "explode",
                                    duration: 1000
                                }
                            });
                            var CustomertSelected = @Html.Raw(Json.Encode(@Model.CustomerDetail.Select(x=>x.CustomerId).ToList()));
                           var BillDesc="";
                           var value="";
                            for(var i=0;i<CustomertSelected.length;i++)
                            {   
                                value = value+"<span>" + parseInt(i + 1) + ". " + $("#divfn_" + CustomertSelected[i]).text() + "</span><br/>";
                                if(i===0)
                                {
                                    BillDesc= $("#divbd_" + CustomertSelected[i]).text().trim();
                                }                             
                            }                           
                            $("#divGroupNames").html(value);
                            $("#BillDesc").val(BillDesc);
                            $("#dialog1").dialog("open");
                        });

                        $('#btnUpdateDesc').click(function (event) {

                            $("#dialog1").dialog("close");
                            if (confirm('Are you sure ?')) {
                                    var CustomertSelected = @Html.Raw(Json.Encode(@Model.CustomerDetail.Select(x=>x.CustomerId).ToList()));
                                    $('#CustomertSelected').val(CustomertSelected.join(","));
                                    var param = new FormData();
                                    param.append("GroupId", $('#GroupId').val());
                                    param.append("CustomertSelected", $('#CustomertSelected').val());
                                    param.append("BillDesc", $('#BillDesc').val());
                                    $.ajax({
                                        type: 'Post',
                                        contentType: false, // Not to set any content header
                                        processData: false, // Not to process data
                                        url: '@Url.Action("UpdateBillDesc", "Group")',
                                        data: param,//{ CustomerSelected: $('#CustomertSelected').val(), EmailNote: $('#EmailNote').val(), File: $("#file").get(0).files[0].val() },
                                        datatype: 'Json',
                                        success: function (data) {
                                            $('.singleCheckBox').each(function () { this.checked = false });
                                            var isChecked = $('.singleCheckBox').is(':checked');
                                            $('.singleCheckBox').closest('tr').removeClass(isChecked ? 'not-selected-row' : 'selected-row');
                                            $('#BillDesc').val("");
                                            $.notify({ message: 'Bill description updated Successfully' }, { type: 'success' });
                                            location.reload();
                                        },
                                        Error: function () { $.notify({ message: 'Some Error Occured Please Try again later' }, { type: 'danger' }); }

                                    });
                                }
                                return false;

                        });



                        $('#btnnotebox').click(function (event) {
                            $("#dialog").dialog("close");

                            var len=$(".singleCheckBox:checkbox:not(:checked)").length;
                            if ($(".singleCheckBox:checkbox:not(:checked)").length > 0) {

                                if (confirm('Are you sure ?')) {
                                    //$('body').append('<div id="foon" style="background-color: rgba(0, 0, 0, 0.6); width:100%; height:100%; position:fixed; top:0px; left:0px; z-index:' + (opts.zIndex - 1) + '"/>');

                                    //var target = document.getElementById('foo');
                                    //var spinner = new Spinner(opts).spin(target);
                                    var customerselected = $.map($(".singleCheckBox:checkbox:not(:checked)"),
                                  function (e) { return $(e).val(); });
                                    $('#CustomertSelected').val(customerselected);
                                    var param = new FormData();
                                    var file = $("#file").get(0).files[0];
                                    if (file != undefined) {
                                        param.append(file.name, file);
                                    }
                                    param.append("CustomerSelected", $('#CustomertSelected').val());
                                    param.append("EmailNote", $('#EmailNote').val());
                                    param.append("GroupId", $('#GroupId').val());
                                    $.ajax({
                                        type: 'Post',
                                        contentType: false, // Not to set any content header
                                        processData: false, // Not to process data
                                        url: '@Url.Action("EMailCustomern", "User")',
                                        data: param,
                                        datatype: 'Json',
                                        success: function (data) {
                                            //spinner.stop();
                                            $('#foon').remove();
                                            $('.singleCheckBox').each(function () { this.checked = false });
                                            var isChecked = $('.singleCheckBox').is(':checked');
                                            $('.singleCheckBox').closest('tr').removeClass(isChecked ? 'not-selected-row' : 'selected-row');
                                            $('#EmailNote').val("");
                                            if(data==true)
                                            {
                                                $.notify({ message: 'Mail Sent Successfully' },{  type: 'success' });
                                                location.reload();
                                            }
                                            else
                                            {
                                                $.notify({ message: 'Some Error Occured. Please check NextBillDate and AmountDue is not empty.' },{  type: 'danger' });

                                            }
                                        },
                                        Error: function () { $.notify({ message: 'Some Error Occured. Please check NextBillDate and AmountDue is not empty.' },{  type: 'danger' }); }

                                    });
                                }
                                return false;
                            }
                            else {
                                $.notify({ message: 'Please un select any One customer to send an email..' },{  type: 'info' });
                                //alert('Please un select any One customer to send an email..');
                                return false;
                            }
                        });
                    });

                    function SendBillsController($scope, $http,$filter,$window) {
                        $scope.values = @Html.Raw(Json.Encode(@Model.CustomerDetail));
                        $scope.Results=[];
                        angular.forEach($scope.values, function(value, key) {
                            value.BillDate=value.NextBillDate;
                            value.NextBillDate = (value.NextBillDate) ? $filter('date')(parseInt(value.NextBillDate.substr(6)), "MM-dd-yyyy") : '';
                            $scope.Results.push(value);
                        }, $scope.Results);
                        //console.log($scope.Results);
                        $scope.curdate = new Date();
                        $scope.editMode=false;
                        $scope.Datefunction = function (date) {
                            console.log(date);
                            return (date) ? $filter('date')(parseInt(date.substr(6)), "MM-dd-yyyy") : '';
                        }
                        $scope.validate = function(date) {
                            return new Date($filter('date')(parseInt(date.substr(6)), 'yyyy-MM-dd')) <=$scope.curdate;
                        }

                        $scope.EditDescription=function(){
                            $scope.editMode=true;
                            $(".billDate").each(function() {
                                var id=$(this).attr("id");
                                $("#NextBillDate_"+id).mask("99-99-9999");
                            });

                        }
                        $scope.UpdateDescription=function(){
                            var opts = {
                                lines: 13, // The number of lines to draw
                                length: 5, // The length of each line
                                width: 3, // The line thickness
                                radius: 40, // The radius of the inner circle
                                corners: 1, // Corner roundness (0..1)
                                rotate: 0, // The rotation offset
                                direction: 1, // 1: clockwise, -1: counterclockwise
                                color: '#fff', // #rgb or #rrggbb or array of colors
                                speed: 1, // Rounds per second
                                trail: 60, // Afterglow percentage
                                shadow: true, // Whether to render a shadow
                                hwaccel: false, // Whether to use hardware acceleration
                                className: 'spinner', // The CSS class to assign to the spinner
                                zIndex: 2e9, // The z-index (defaults to 2000000000)
                                top: '400px', // Top position relative to parent in px
                                left: '650px' // Left position relative to parent in px
                            };
                            $scope.editMode=true;
                            $('body').append('<div id="foon" style="background-color: rgba(0, 0, 0, 0.6); width:100%; height:100%; position:fixed; top:0px; left:0px; z-index:' + (opts.zIndex - 1) + '"/>');

                            var target = document.getElementById('foo');
                            var spinner = new Spinner(opts).spin(target);
                            //console.log($scope.Results);
                            //            var target = document.getElementById('foo');
                            //            var spinner = new Spinner(opts).spin(target);
                            $http({
                                method: "post",
                                url: '@Url.Action("UpdateDescription", "Group")',
                                data: { 'details': $scope.Results, 'GroupId': $('#GroupId').val()}
                            }).success(function (data, status, headers, config) {
                                // handle success things

                                $scope.editMode=false;
                                spinner.stop();
                                $('#foon').remove();
                                $('.singleCheckBox').attr('checked', false);
                                var isChecked = $('.singleCheckBox').checked;;
                                $('.singleCheckBox').closest('tr').removeClass(isChecked ? 'not-selected-row' : 'selected-row');
                                $('#EmailNote').val("");

                                if(data === "true")
                                {
                                    $.notify({ message: 'updated sucessfully' }, { type: 'success' });
                                }
                                else
                                {
                                    $.notify({ message: 'Pls check all the required fields are entered.' }, { type: 'error' });
                                }
                                //alert('updated sucessfully');
                                $window.location.reload();
                            }).error(function (data, status, headers, config) {
                                // handle error things

                                spinner.stop();
                                $('#foon').remove();
                                $.notify({ message: 'some error occured.' }, { type: 'error' });
                                //alert('error');
                            });
                        }
                    }

                </script>
            }

            <script type="text/javascript">


                $(document).ready(function () {

                    $('#btnsendmail').click(function (event) {
                        $('#file').val("");
                        customConfirm();
                    });
                    $('#btncancel').click(function (event) {
                        $('#file').val("");
                        $("#dialog").dialog("close");
                       
                    });
                    $('#btnCancelDesc').click(function (event) {                        
                        $('#BillDesc').val("");                      
                        $("#dialog1").dialog("close");
                    });
                });
                
                
                function customConfirm() {


                    $("#dialog").dialog({
                        autoOpen: false,
                        width: 600,
                        height: 490,
                        show: {
                            effect: "blind",
                            duration: 1000
                        },
                        hide: {
                            effect: "explode",
                            duration: 1000
                        }
                    });
                   

                    var customerselected = $.map($(".singleCheckBox:checkbox:not(:checked)"),
                    function (e) {
                        return $(e).val();
                    });
                    var ccEmails = "";
                    var bccEmails = "";
                    if(customerselected.length ==0)
                    {
                        customerselected="Please un select any One customer to send an email.";
                    }
                    else if (customerselected.length <=6) {
                        customerselected = $.map($(".singleCheckBox:checkbox:not(:checked)"),
                            function (e, k) {
                                var value = "<span>" + parseInt( k + 1) + ". " + $("#divfn_" + $(e).val()).text()  + "</span><br/>";
                                var ccval =$("#hdncc_"+$(e).val()).val();
                                var bccval = $("#hdnbcc_" + $(e).val()).val();

                                if (ccval) {
                                    if (ccEmails === "") {
                                        ccEmails = ccEmails + ccval ;
                                    }
                                    else
                                    {
                                        ccEmails = ccEmails + " , " + ccval;
                                    }
                                }
                                if (bccval) {
                                    if (bccEmails === "") {
                                        bccEmails = bccEmails + bccval;
                                    }
                                    else {
                                        bccEmails =  bccEmails +" , " + bccval;
                                    }
                                }
                                return value;
                            });
                    }
                    else
                    {
                        customerselected = $.map($(".singleCheckBox:checkbox:not(:checked)"),
                            function (e, k) {
                                var value = "<span>" + parseInt(k + 1) + ". " + $("#divfn_" + $(e).val()).text()  + "</span>";
                                var ccval =$("#hdncc_"+$(e).val()).val();
                                var bccval = $("#hdnbcc_" + $(e).val()).val();

                                if (ccval) {
                                    if (ccEmails === "") {
                                        ccEmails = ccEmails + ccval ;
                                    }
                                    else
                                    {
                                        ccEmails = ccEmails + " , " + ccval;
                                    }
                                }
                                if (bccval) {
                                    if (bccEmails === "") {
                                        bccEmails = bccEmails + bccval;
                                    }
                                    else {
                                        bccEmails =  bccEmails +" , " + bccval;
                                    }
                                }
                                return value;
                            });
                    }
                    $("#divSendMail").html(customerselected);
                    $("#divcc").html(ccEmails);
                    $("#divbcc").html(bccEmails);
                    $("#dialog").dialog("open");

                };

            </script>
        </div>
